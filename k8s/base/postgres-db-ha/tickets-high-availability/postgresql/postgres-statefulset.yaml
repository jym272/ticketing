apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-sts-tickets
  annotations:
    datree.skip/CONTAINER_CVE2021_25741_INCORRECT_SUBPATH_KEY: the pre-stop.sh script must be run in root dir
    datree.skip/CONTAINERS_INCORRECT_READONLYROOTFILESYSTEM_VALUE: it must save logs and configs
spec:
  serviceName: db-tickets-svc
  replicas: 3
  selector:
    matchLabels:
      db: tickets
  template:
    metadata:
      labels:
        db: tickets
    spec:
      securityContext:
        fsGroup: 1001
      initContainers:
        - name: create-dir-if-not-exists
          imagePullPolicy: IfNotPresent
          image: busybox:1.36.0
          command:
            - /bin/sh
            - -c
            - |
              if [ ! -d /bitnami/postgresql ]; then
                mkdir -p /bitnami/postgresql
                chown -R 10001 /bitnami/postgresql
                echo "created directory /bitnami/postgresql"
              else
                echo "directory /bitnami/postgresql already exists"
              fi
          volumeMounts:
            - mountPath: /bitnami
              name: data
      containers:
        - name: postgresql
          lifecycle:
            preStop:
              exec:
                command:
                  - /pre-stop.sh
          image: docker.io/bitnami/postgresql-repmgr:15.3.0-debian-11-r3
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 10001
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ "NET_RAW" ]
          # Auxiliary vars to populate environment variables
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            # PostgreSQL configuration
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            - name: POSTGRES_USER
              value: "postgres"
             # will set the password of the "postgres" user to the value of POSTGRESQL_PASSWORD_FILE
            - name: POSTGRESQL_PASSWORD_FILE
              value: /run/secrets/auth-passwd/POSTGRESQL_PASSWORD
            - name: POSTGRES_DB
              value: "tickets"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "true"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit, repmgr"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            # Repmgr configuration
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: REPMGR_UPGRADE_EXTENSION
              value: "no"
            - name: REPMGR_PGHBA_TRUST_ALL
              value: "no"
            - name: REPMGR_MOUNTED_CONF_DIR
              value: "/bitnami/repmgr/conf"
            - name: REPMGR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: REPMGR_PARTNER_NODES
              value: postgres-sts-tickets-0.db-tickets-svc.$(REPMGR_NAMESPACE).svc.cluster.local,postgres-sts-tickets-1.db-tickets-svc.$(REPMGR_NAMESPACE).svc.cluster.local,postgres-sts-tickets-2.db-tickets-svc.$(REPMGR_NAMESPACE).svc.cluster.local
            - name: REPMGR_PRIMARY_HOST
              value: "postgres-sts-tickets-0.db-tickets-svc.$(REPMGR_NAMESPACE).svc.cluster.local"
            - name: REPMGR_NODE_NAME
              value: "$(MY_POD_NAME)"
            - name: REPMGR_NODE_NETWORK_NAME
              value: "$(MY_POD_NAME).db-tickets-svc.$(REPMGR_NAMESPACE).svc.cluster.local"
            - name: REPMGR_LOG_LEVEL
              value: "NOTICE"
            - name: REPMGR_CONNECT_TIMEOUT
              value: "5"
            - name: REPMGR_RECONNECT_ATTEMPTS
              value: "3"
            - name: REPMGR_RECONNECT_INTERVAL
              value: "5"
            - name: REPMGR_USERNAME
              value: "repmgr"
            # sets the password of the "repmgr" user to the value of REPMGR_PASSWORD_FILE
            - name: REPMGR_PASSWORD_FILE
              value: /run/secrets/auth-passwd/REPMGR_PASSWORD
            - name: REPMGR_DATABASE
              value: "repmgr"
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - bash
                - -ec
                - 'PGPASSWORD=$(cat /run/secrets/auth-passwd/POSTGRESQL_PASSWORD) psql -w -U "postgres" -d "tickets"  -h 127.0.0.1 -c "SELECT 1"'
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - bash
                - -ec
                - 'PGPASSWORD=$(cat /run/secrets/auth-passwd/POSTGRESQL_PASSWORD) psql -w -U "postgres" -d "tickets"  -h 127.0.0.1 -c "SELECT 1"'
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 350m
              memory: 600Mi
          volumeMounts:
            - name: data
              mountPath: /bitnami #/postgresql
            - name: hooks-scripts
              mountPath: /pre-stop.sh
              subPath: pre-stop.sh
            - mountPath: /run/secrets/auth-passwd
              name: secret-volume
              readOnly: true
      volumes:
        - name: hooks-scripts
          configMap:
            name: postgres-configmap-hooks
            defaultMode: 0755
        - name: secret-volume
          secret:
            secretName: sealed-secret-postgres-ha
            optional: false
            items:
              - key: REPMGR_PASSWORD
                path: REPMGR_PASSWORD
              - key: POSTGRESQL_PASSWORD
                path: POSTGRESQL_PASSWORD
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"