apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgpool-orders-deployment
  annotations:
    datree.skip/CONTAINERS_INCORRECT_READONLYROOTFILESYSTEM_VALUE: it must save logs and configs
spec:
  replicas: 2
  selector:
    matchLabels: 
      app: pgpool-orders
  template:
    metadata:
      labels: 
        app: pgpool-orders
    spec:          
      securityContext:
        fsGroup: 1001
      containers:
        - name: pgpool
          image: docker.io/bitnami/pgpool:4.4.2-debian-11-r35
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 10001
            runAsNonRoot: true
            capabilities:
              drop: [ "NET_RAW" ]
            allowPrivilegeEscalation: false
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: PGPOOL_BACKEND_NODES
              value: 0:postgres-sts-orders-0.db-orders-svc:5432,1:postgres-sts-orders-1.db-orders-svc:5432,2:postgres-sts-orders-2.db-orders-svc:5432
            # Username to use to perform streaming checks. This is the user that is used to check that streaming
            # replication is working. Typically, this is the user owner of the 'repmgr' database. No defaults.
            - name: PGPOOL_SR_CHECK_USER
              value: "repmgr"
            - name: PGPOOL_SR_CHECK_PASSWORD_FILE
              value: /run/secrets/auth-passwd/REPMGR_PASSWORD
#            - name: PGPOOL_SR_CHECK_PASSWORD
#              valueFrom:
#                secretKeyRef:
#                  name: postgres-secrets
#                  key: repmgr-password
            # Database to use to perform streaming checks. Defaults to "postgres"
            - name: PGPOOL_SR_CHECK_DATABASE
              value: "orders"
            - name: PGPOOL_ENABLE_LDAP
              value: "no"
            - name: PGPOOL_POSTGRES_USERNAME
              value: "postgres"
            - name: PGPOOL_POSTGRES_PASSWORD_FILE
              value: /run/secrets/auth-passwd/POSTGRESQL_PASSWORD
#            - name: PGPOOL_POSTGRES_PASSWORD
#              valueFrom:
#                secretKeyRef:
#                  name: postgres-secrets
#                  key: postgresql-password
            - name: PGPOOL_ADMIN_USERNAME
              value: "admin"
            - name: PGPOOL_ADMIN_PASSWORD_FILE
              value: /run/secrets/auth-passwd/PGPOOL_ADMIN_PASSWORD
#            - name: PGPOOL_ADMIN_PASSWORD
#              valueFrom:
#                secretKeyRef:
#                  name: pgpool-secrets
#                  key: admin-password
            - name: PGPOOL_ENABLE_LOAD_BALANCING
              value: "yes"
            - name: PGPOOL_ENABLE_LOG_CONNECTIONS
              value: "no"
            - name: PGPOOL_ENABLE_LOG_HOSTNAME
              value: "yes"
            - name: PGPOOL_ENABLE_LOG_PER_NODE_STATEMENT
              value: "no"
            - name: PGPOOL_CHILD_LIFE_TIME
              value: ""
            - name: PGPOOL_ENABLE_TLS
              value: "no"
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /opt/bitnami/scripts/pgpool/healthcheck.sh
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - bash
                - -ec
                - 'PGPASSWORD=$(cat /run/secrets/auth-passwd/POSTGRESQL_PASSWORD) psql -U "postgres" -d "orders" -h /opt/bitnami/pgpool/tmp -tA -c "SELECT 1" >/dev/null'
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          resources:
            requests:
              cpu: 100m
              memory: 400Mi
            limits:
              cpu: 500m
              memory: 600Mi
          volumeMounts:
            - mountPath: /run/secrets/auth-passwd
              name: secret-volume
              readOnly: true
      volumes:
        - name: secret-volume
          secret:
            secretName: sealed-secret-postgres-ha
            optional: false
            items:
              - key: REPMGR_PASSWORD
                path: REPMGR_PASSWORD
              - key: POSTGRESQL_PASSWORD
                path: POSTGRESQL_PASSWORD
              - key: PGPOOL_ADMIN_PASSWORD
                path: PGPOOL_ADMIN_PASSWORD