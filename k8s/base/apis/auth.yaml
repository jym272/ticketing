apiVersion: v1
kind: Service
metadata:
  name: auth-api
spec:
  selector:
    api: auth
  ports:
    - protocol: TCP
      port: 3050
      name: auth
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-api
  labels:
    env: dev
spec:
  replicas: 2
  selector:
    matchLabels:
      api: auth
  template:
    metadata:
#      annotations:
#        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
      labels:
        api: auth
    spec:
      initContainers:
        - name: wait-for-postgres
          imagePullPolicy: IfNotPresent
          image: busybox:1.36.0
          command:
            [
              "sh",
              "-c",
              "until nc -vz db-auth.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local 5432; do echo waiting for db auth; sleep 2; done",
            ]
      containers:
        - name: auth-api
          image: jym272/ticketing-auth-api
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop: [ "NET_RAW" ]
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 10001
            runAsGroup: 10000
          readinessProbe:
            httpGet:
              path: /health
              port: 3050
            periodSeconds: 5
            failureThreshold: 1
          livenessProbe:
            httpGet:
              path: /health
              port: 3050
            periodSeconds: 10
            failureThreshold: 2
          startupProbe:
            httpGet:
              path: /health
              port: 3050
            failureThreshold: 30
            periodSeconds: 1
          resources:
            requests:
              cpu: 20m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
          env:
            - name: FORCE_COLOR
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: FORCE_COLOR
            - name: PORT
              value: "3050"
            - name: POSTGRES_DB
              value: auth
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-host
                  key: POSTGRES_HOST_AUTH
            - name: POSTGRES_PORT
              value: "5432"
          volumeMounts:
            - mountPath: /run/secrets/api-secrets
              name: api-secrets
              readOnly: true
      volumes:
        - name: api-secrets
          projected:
            sources:
              - secret:
                  name: sealed-secret-postgres
                  items:
                    - key: POSTGRES_USER
                      path: POSTGRES_USER
                    - key: POSTGRES_PASSWORD
                      path: POSTGRES_PASSWORD
              - secret:
                  name: sealed-secret-auth
                  items:
                    - key: JWT_SECRET
                      path: JWT_SECRET
                    - key: PASSWORD_PEPPER
                      path: PASSWORD_PEPPER
