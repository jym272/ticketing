apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-orders-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  nfs:
    # minikube ssh -p multinodes //$ip r | grep default
    server: 192.168.122.1
    path: /data/postgres-orders
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-orders-pvc
  namespace: default
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: db-orders
spec:
  selector:
    db: orders
  ports:
    - protocol: TCP
      port: 5432
      name: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-orders
spec:
  replicas: 1
  selector:
    matchLabels:
      db: orders
  template:
    metadata:
      labels:
        db: orders
    spec:
      containers:
        - name: db-orders
          image: postgres:15.1
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_USER
              value: jorge
            - name: POSTGRES_DB
              value: orders
            - name: POSTGRES_PASSWORD
              value: "123456"
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          livenessProbe:
            exec:
              command: ["psql", "-U", "jorge", "-d", "orders", "-c", "SELECT 1"]
            initialDelaySeconds: 3
            periodSeconds: 5
            failureThreshold: 2
          readinessProbe:
            exec:
              command: ["psql", "-U", "jorge", "-d", "orders", "-c", "SELECT 1"]
            initialDelaySeconds: 3
            periodSeconds: 5
            failureThreshold: 2
          volumeMounts:
            - mountPath: var/lib/postgresql/data
              name: persistent-storage
      volumes:
        - name: persistent-storage
          persistentVolumeClaim:
            claimName: postgres-orders-pvc





